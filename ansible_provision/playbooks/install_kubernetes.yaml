---
- name: Initialize Kubernetes Cluster
  hosts: all
  become: yes
  gather_facts: no

  vars:
    master_load_balancer_name: lb-master
    master_node_name: "{{ hostvars[groups['master'][0]]['inventory_hostname_short'] }}"

  tasks:

    - name: Create .ssh directory
      ansible.builtin.file:
        path: /root/.ssh
        state: directory
        mode: '0700'

    - name: Generate SSH key
      ansible.builtin.openssh_keypair:
        path: ~/.ssh/id_rsa
        force: no

    - name: Install public key on remote host
      ansible.builtin.copy:
        src: ~/.ssh/id_rsa.pub
        dest: /root/.ssh/authorized_keys
        mode: '0600'
      with_items: "{{ groups['all'] }}"
      when: inventory_hostname != item

    - name: Check if control plane is already initialized
      when: "'master-1' in inventory_hostname"
      ansible.builtin.stat:
        path: /etc/kubernetes/admin.conf
      register: control_plane_initialized

    - name: Initialize control plane on master-1
      when: "'master-1' in inventory_hostname and not control_plane_initialized.stat.exists"
      ansible.builtin.command: >
        kubeadm init
        --control-plane-endpoint={{ master_load_balancer_name }}:10443
        --upload-certs
        --apiserver-advertise-address={{ ip_master_list.split()[0] }}
        --pod-network-cidr=192.168.0.0/16
      run_once: true

    - name: Deploy Calico network
      when: "'master-1' in inventory_hostname"
      block:
        - name: Check if Calico YAML file exists
          ansible.builtin.uri:
            url: https://docs.projectcalico.org/v3.25/manifests/calico.yaml
            method: HEAD
            validate_certs: no
          register: calico_yaml_status
          changed_when: false

        - name: Apply Calico network configuration
          become: true
          when: calico_yaml_status.status == 200
          ansible.builtin.shell: >
            kubectl --kubeconfig=/etc/kubernetes/admin.conf apply -f https://docs.projectcalico.org/v3.25/manifests/calico.yaml
          environment:
            KUBECONFIG: /etc/kubernetes/admin.conf
          args:
            executable: /bin/bash
          register: calico_apply_result
          changed_when: "'created' in calico_apply_result.stdout or 'configured' in calico_apply_result.stdout"

        - name: Check if calicoctl exists
          ansible.builtin.stat:
            path: /usr/local/bin/calicoctl
          register: calicoctl_stat

        - name: Install calicoctl
          when: "'master-1' in inventory_hostname and not calicoctl_stat.stat.exists"
          ansible.builtin.get_url:
            url: "https://github.com/projectcalico/calico/releases/download/v3.24.1/calicoctl-linux-amd64"
            dest: /usr/local/bin/calicoctl
            mode: "u+x"

    - name: Generate join command for worker nodes
      when: "'master-1' in inventory_hostname"
      block:
        - name: Get token and certificate hash
          ansible.builtin.shell: kubeadm token create --print-join-command --ttl 24h
          register: worker_join_output
          changed_when: False
          run_once: true

        - name: Set join command for worker nodes
          ansible.builtin.set_fact:
            worker_join_command: "{{ worker_join_output.stdout }}"
          run_once: true

        - name: Save join command to file
          ansible.builtin.copy:
            content: "{{ worker_join_command }}"
            dest: /joincluster.sh
            mode: '0744'
          run_once: true

    - name: Create join command for control-plane nodes
      when: "'master-1' in inventory_hostname"
      block:
        - name: Upload control plane certificates and get certificate key
          ansible.builtin.command:
            cmd: kubeadm init phase upload-certs --upload-certs
          register: upload_certs_output
          changed_when: False
          run_once: true

        - name: Extract certificate key from output
          ansible.builtin.set_fact:
            certificate_key: "{{ upload_certs_output.stdout_lines[-1] }}"
          run_once: true

        - name: Generate basic join command
          ansible.builtin.command:
            cmd: kubeadm token create --print-join-command
          register: basic_join_command_output
          changed_when: False
          run_once: true

        - name: Set basic join command
          ansible.builtin.set_fact:
            basic_join_command: "{{ basic_join_command_output.stdout }}"
          run_once: true

        - name: Combine basic join command, control plane flag, and certificate key
          ansible.builtin.set_fact:
            long_join_command: "{{ basic_join_command }} --control-plane --certificate-key {{ certificate_key }}"
          run_once: true
        
        - name: Save join command to file
          ansible.builtin.copy:
            content: "{{ long_join_command }}"
            dest: /controlplane.sh
            mode: '0744'

        - name: Display long join command
          ansible.builtin.debug:
            var: long_join_command

    - name: Download join command file from master-1 for control-plane nodes
      when: "'master-' in inventory_hostname and 'master-1' not in inventory_hostname"
      block:
        - name: Copy joincluster.sh from master node
          become: yes
          ansible.builtin.shell:
            cmd: |
              sshpass -p "kubeadmin" scp -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no master-1:/controlplane.sh /controlplane.sh

        - name: Join master node to cluster
          ansible.builtin.shell: "/controlplane.sh >/dev/null 2>&1"
          changed_when: false
          register: join_output

        - name: Display join output
          ansible.builtin.debug:
            var: join_output.stdout

    - name: Download join command file from master-1 for worker nodes
      when: "'worker' in inventory_hostname"
      block:
        - name: Copy joincluster.sh from master node
          become: yes
          ansible.builtin.shell:
            cmd: |
              sshpass -p "kubeadmin" scp -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no master-1:/joincluster.sh /joincluster.sh

        - name: Join worker node to cluster
          become: yes
          ansible.builtin.shell: "/joincluster.sh >/dev/null 2>&1"
          changed_when: false
          register: join_output

        - name: Display join output
          ansible.builtin.debug:
            var: join_output.stdout
    
    - name: Set Kubernetes config
      when: "'master-' in inventory_hostname"
      block:
        - name: Set Kubernetes config
          become: yes
          file:
            path: "{{ item }}/.kube"
            state: directory
          loop:
            - "{{ ansible_env.HOME }}"
            - "/home/vagrant"

        - name: Copy Kubernetes config
          become: yes
          copy:
            src: /etc/kubernetes/admin.conf
            dest: "{{ item }}/.kube/config"
            mode: '0644'
            remote_src: yes
          loop:
            - "{{ ansible_env.HOME }}"
            - "/home/vagrant"

        - name: Set ownership on Kubernetes config
          become: yes
          file:
            path: "{{ item }}/.kube/config"
            owner: "{{ item_username }}"
            group: "{{ item_username }}"
          vars:
            item_username: "{{ item.split('/')[-1] }}"
          loop:
            - "{{ ansible_env.HOME }}"
            - "/home/vagrant"