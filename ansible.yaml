---
- name: Install Loadbalancer components and configure HAProxy and Keepalived
  hosts: all
  become: yes
  gather_facts: yes

  vars:
    port_vip: 10443

  tasks:
    - name: Install required packages
      yum:
        name:
          - keepalived
          - haproxy
        state: present

    - name: Define hostname variable
      set_fact:
        hostname: "{{ ansible_hostname }}"

    - name: Define environment variables based on hostname
      set_fact:
        vm_ips: "{{ ip_master_list if 'master' in hostname else ip_worker_list }}"
        ip_vip: "{{ master_load_balancer_ip if 'master' in hostname else worker_load_balancer_ip }}"
        virtual_router_id: "{{ 1 if 'master' in hostname else 2 }}"
        port: "{{ 6443 if 'master' in hostname else 30100 }}"
      when: "'master' in hostname or 'worker' in hostname"

    - name: Set up check_apiserver.sh script
      copy:
        dest: /etc/keepalived/check_apiserver.sh
        mode: 0755
        content: |
          #!/bin/sh

          errorExit() {
            echo "*** $@" 1>&2
            exit 1
          }

          curl --silent --max-time 2 --insecure https://localhost:6443/ -o /dev/null || errorExit "Error GET https://localhost:6443/"
          if ip addr | grep -q {{ ip_vip }}; then
            curl --silent --max-time 2 --insecure https://{{ ip_vip }}:{{ port_vip }}/ -o /dev/null || errorExit "Error GET https://{{ ip_vip }}:{{ port_vip }}/"
          fi

    - name: Configure HAProxy
      template:
        dest: /etc/haproxy/haproxy.cfg
        src: haproxy.cfg.j2

    - name: Configure Keepalived
      template:
        dest: /etc/keepalived/keepalived.conf
        src: keepalived.conf.j2

    - name: Enable and restart services
      systemd:
        name: "{{ item }}"
        state: restarted
        enabled: yes
      with_items:
        - keepalived
        - haproxy

    - name: Check services status
      systemd:
        name: "{{ item }}"
        state: started
      with_items:
        - keepalived
        - haproxy
